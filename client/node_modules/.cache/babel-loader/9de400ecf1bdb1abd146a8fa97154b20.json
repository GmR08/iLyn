{"ast":null,"code":"var _classCallCheck = require(\"/home/guillermo/Desktop/pfc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/guillermo/Desktop/pfc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/home/guillermo/Desktop/pfc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _get = require(\"/home/guillermo/Desktop/pfc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\nvar _getPrototypeOf = require(\"/home/guillermo/Desktop/pfc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/home/guillermo/Desktop/pfc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _slicedToArray = require(\"/home/guillermo/Desktop/pfc/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n// sweetalert2-react-content v5.0.7\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react'), require('react-dom/client')) : typeof define === 'function' && define.amd ? define(['react', 'react-dom/client'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.sweetalert2ReactContent = factory(global.React, global.ReactDOM));\n})(this, function (React, client) {\n  'use strict';\n\n  var mounts = [{\n    key: 'title',\n    getter: function getter(swal) {\n      return swal.getTitle();\n    }\n  }, {\n    key: 'html',\n    getter: function getter(swal) {\n      return swal.getHtmlContainer();\n    }\n  }, {\n    key: 'confirmButtonText',\n    getter: function getter(swal) {\n      return swal.getConfirmButton();\n    }\n  }, {\n    key: 'denyButtonText',\n    getter: function getter(swal) {\n      return swal.getDenyButton();\n    }\n  }, {\n    key: 'cancelButtonText',\n    getter: function getter(swal) {\n      return swal.getCancelButton();\n    }\n  }, {\n    key: 'footer',\n    getter: function getter(swal) {\n      return swal.getFooter();\n    }\n  }, {\n    key: 'closeButtonHtml',\n    getter: function getter(swal) {\n      return swal.getCloseButton();\n    }\n  }, {\n    key: 'iconHtml',\n    getter: function getter(swal) {\n      return swal.getIconContent();\n    }\n  }, {\n    key: 'loaderHtml',\n    getter: function getter(swal) {\n      return swal.getLoader();\n    }\n  }];\n  var noop = function noop() {}; // eslint-disable-line @typescript-eslint/no-empty-function\n\n  function withReactContent(ParentSwal) {\n    /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n    and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n    function extractReactParams(params) {\n      var reactParams = {};\n      var otherParams = {};\n      var mountKeys = mounts.map(function (mount) {\n        return mount.key;\n      });\n      Object.entries(params).forEach(function (_ref) {\n        var _ref3 = _slicedToArray(_ref, 2),\n          key = _ref3[0],\n          value = _ref3[1];\n        if (mountKeys.includes(key) && /*#__PURE__*/React.isValidElement(value)) {\n          reactParams[key] = value;\n          otherParams[key] = ' ';\n        } else {\n          otherParams[key] = value;\n        }\n      });\n      return [reactParams, otherParams];\n    }\n    function render(swal, reactParams) {\n      Object.entries(reactParams).forEach(function (_ref2) {\n        var _ref4 = _slicedToArray(_ref2, 2),\n          key = _ref4[0],\n          value = _ref4[1];\n        var mount = mounts.find(function (mount) {\n          return mount.key === key;\n        });\n        var domElement = mount.getter(ParentSwal);\n        var root = client.createRoot(domElement);\n        root.render(value);\n        swal.__roots.push(root);\n      });\n    }\n    function unrender(swal) {\n      swal.__roots.forEach(function (root) {\n        root.unmount();\n      });\n      swal.__roots = [];\n    }\n    return /*#__PURE__*/function (_ParentSwal) {\n      _inherits(_class, _ParentSwal);\n      function _class() {\n        _classCallCheck(this, _class);\n        return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));\n      }\n      _createClass(_class, [{\n        key: \"_main\",\n        value: function _main(params, mixinParams) {\n          var _this = this;\n          this.__roots = [];\n          this.__params = Object.assign({}, mixinParams, params);\n          var _extractReactParams = extractReactParams(this.__params),\n            _extractReactParams2 = _slicedToArray(_extractReactParams, 2),\n            reactParams = _extractReactParams2[0],\n            otherParams = _extractReactParams2[1];\n          var superWillOpen = otherParams.willOpen || noop;\n          var superDidOpen = otherParams.didOpen || noop;\n          var superDidDestroy = otherParams.didDestroy || noop;\n          return _get(_getPrototypeOf(_class.prototype), \"_main\", this).call(this, Object.assign({}, otherParams, {\n            willOpen: function willOpen(popup) {\n              render(_this, reactParams);\n              superWillOpen(popup);\n            },\n            didOpen: function didOpen(popup) {\n              // read more about why this setTimeout is needed here:\n              // https://github.com/reactwg/react-18/discussions/5 (What about the render callback?)\n              setTimeout(function () {\n                superDidOpen(popup);\n              });\n            },\n            didDestroy: function didDestroy(popup) {\n              superDidDestroy(popup);\n              unrender(_this);\n            }\n          }));\n        }\n      }, {\n        key: \"update\",\n        value: function update(params) {\n          Object.assign(this.__params, params);\n          unrender(this);\n          var _extractReactParams3 = extractReactParams(this.__params),\n            _extractReactParams4 = _slicedToArray(_extractReactParams3, 2),\n            reactParams = _extractReactParams4[0],\n            otherParams = _extractReactParams4[1];\n          _get(_getPrototypeOf(_class.prototype), \"update\", this).call(this, otherParams);\n          render(this, reactParams);\n        }\n      }], [{\n        key: \"argsToParams\",\n        value: function argsToParams(args) {\n          if ( /*#__PURE__*/React.isValidElement(args[0]) || /*#__PURE__*/React.isValidElement(args[1])) {\n            var params = {};\n            ['title', 'html', 'icon'].forEach(function (name, index) {\n              if (args[index] !== undefined) {\n                params[name] = args[index];\n              }\n            });\n            return params;\n          } else {\n            return ParentSwal.argsToParams(args);\n          }\n        }\n      }]);\n      return _class;\n    }(ParentSwal);\n  }\n  return withReactContent;\n});","map":null,"metadata":{},"sourceType":"script"}